"use strict";(self.webpackChunkdocs_quick_shop_search=self.webpackChunkdocs_quick_shop_search||[]).push([[873],{2163:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var i=s(4848),a=s(8453);const t={sidebar_position:3},r="Configuration",o={id:"configuration",title:"Configuration",description:"The configuration and all of its translation-inputs can be found in the folder called QuickShopSearch/config; see the ConfigMapper's Documentation for more detail.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs-quick-shop-search/configuration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"Installation",permalink:"/docs-quick-shop-search/installation"},next:{title:"Issue Reporting",permalink:"/docs-quick-shop-search/issue-reporting"}},c={},l=[{value:"Access-Lists",id:"access-lists",level:2},{value:"Distance-Based Fees",id:"distance-based-fees",level:2},{value:"Per World Distance-Ranges",id:"per-world-distance-ranges",level:3},{value:"Distance-Range Entry",id:"distance-range-entry",level:3},{value:"Permission-Names",id:"permission-names",level:3},{value:"Fee Percentages, Priority and Hiding",id:"fee-percentages-priority-and-hiding",level:3},{value:"Full Example",id:"full-example",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["The configuration and all of its translation-inputs can be found in the folder called ",(0,i.jsx)(n.code,{children:"QuickShopSearch/config"}),"; see the ",(0,i.jsx)(n.a,{href:"https://blvckbytes.github.io/docs-config-mapper",children:"ConfigMapper's Documentation"})," for more detail."]}),"\n",(0,i.jsx)(n.h2,{id:"access-lists",children:"Access-Lists"}),"\n",(0,i.jsxs)(n.p,{children:["In order to control which shops may be accessed by users, access-lists have been introduced; they are located under the key ",(0,i.jsx)(n.code,{children:'"shopAccessLists"'})," in the configuration-file."]}),"\n",(0,i.jsxs)(n.p,{children:["Since different players may have access to a different set of shops, these lists are scoped by permission-suffixes in the form of ",(0,i.jsx)(n.code,{children:"quickshopsearch.access-list.<suffix>"}),", with ",(0,i.jsx)(n.code,{children:"<suffix>"})," being the key under which an access-list registers in the config, under the key ",(0,i.jsx)(n.code,{children:"permissions"}),", right next to ",(0,i.jsx)(n.code,{children:"default"}),"; they are checked in the same order as specified, and the first matching permission-node will be taken as an input when filtering results for any given player."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Beware of permission-inheritance with groups; either specify access-lists in reverse order of group-inheritance, or block access-list permissions from trickling down, as to avoid undesired behavior."})}),"\n",(0,i.jsxs)(n.p,{children:["If a player does not satisfy any of the permission-checks, the ",(0,i.jsx)(n.code,{children:"default"}),"-section will be employed. In the case that you do not want to differentiate by permissions, simply only specify a default. Access-lists can be bypassed altogether by the permission ",(0,i.jsx)(n.code,{children:"quickshopsearch.bypass-access-lists"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The list ",(0,i.jsx)(n.code,{children:"types"})," represents a list of item-types, as defined in ",(0,i.jsx)(n.a,{href:"https://github.com/CryptoMorin/XSeries/blob/master/src/main/java/com/cryptomorin/xseries/XMaterial.java",children:"XMaterial"}),", as to support a broader range of versions. The flag ",(0,i.jsx)(n.code,{children:"isAllowTypes"})," represents the access-mode, with ",(0,i.jsx)(n.code,{children:"true"})," signalling that only the specified types are allowed, but none other than these, and with ",(0,i.jsx)(n.code,{children:"false"})," meaning that only the specified types are disallowed, and all but these are allowed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"shopAccessLists:\n  # Used when no permission-suffix matched on the player\n  default:\n    # Allow only the following\n    isAllowTypes: true\n    types:\n      - DIAMOND_PICKAXE\n      - IRON_SWORD\n  permissions:\n    # quickshopsearch.access-list.suffix-a\n    suffix-a:\n      # Disallow only the following\n      isAllowTypes: false\n      types:\n        - GOLDEN_PICKAXE\n        - WOODEN_SWORD\n    # quickshopsearch.access-list.suffix-b\n    suffix-b:\n      # Disallow only the following\n      isAllowTypes: false\n      types:\n        - WOODEN_PICKAXE\n        - GOLDEN_SWORD\n"})}),"\n",(0,i.jsx)(n.h2,{id:"distance-based-fees",children:"Distance-Based Fees"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This feature has not yet been implemented in any official release and the following documentation merely represents a design-reference for the time being."})}),"\n",(0,i.jsxs)(n.p,{children:["All configuration-options regarding distance-based fees can be found under the root-level key called ",(0,i.jsx)(n.code,{children:"fees"}),"; to enable or disable this feature in its entirety, toggle ",(0,i.jsx)(n.code,{children:"enabled"})," to ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(6101).A+"",width:"534",height:"212"})}),"\n",(0,i.jsx)(n.h3,{id:"per-world-distance-ranges",children:"Per World Distance-Ranges"}),"\n",(0,i.jsxs)(n.p,{children:["To allow for high flexibility fee configuration, distance-ranges are scoped per world-name; there are two keys, namely ",(0,i.jsx)(n.code,{children:"default"}),", which is used as a fallback for all worlds which are not explicitly specified, and ",(0,i.jsx)(n.code,{children:"worlds"}),", which maps world-names to distance-ranges."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(2746).A+"",width:"448",height:"594"})}),"\n",(0,i.jsx)(n.h3,{id:"distance-range-entry",children:"Distance-Range Entry"}),"\n",(0,i.jsxs)(n.p,{children:["Keys within a distance-ranges section (under ",(0,i.jsx)(n.code,{children:"default"})," or world-name) are always integers greater than zero, ordered in an ascending manner, strictly incrementing. If the first key is ",(0,i.jsx)(n.code,{children:"10"})," and the second ",(0,i.jsx)(n.code,{children:"20"}),", that implies the first range being ",(0,i.jsx)(n.code,{children:"[0;10]"})," and the second range being ",(0,i.jsx)(n.code,{children:"[11;20]"}),", as the start of the very first range is always zero, and the start of any follow-up ranges are the end of their predecessors, plus one. Let's see an example."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(6876).A+"",width:"484",height:"588"})}),"\n",(0,i.jsx)(n.h3,{id:"permission-names",children:"Permission-Names"}),"\n",(0,i.jsxs)(n.p,{children:["Within ranges, namely under the integer distance key, fees are scoped per permission-name, just like they are with worlds, to enable you to have varying fees for different users and or groups. Again, the ",(0,i.jsx)(n.code,{children:"default"})," key acts as a fallback for when the user does not satisfy any permission-name, while names can be explicitly stated in the ",(0,i.jsx)(n.code,{children:"names"}),"-section. The layout of resulting permissions is as follows: ",(0,i.jsx)(n.code,{children:"quickshopsearch.fees.distance-range.<name>"}),"; the same name may be used across multiple worlds."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(9543).A+"",width:"432",height:"696"})}),"\n",(0,i.jsx)(n.h3,{id:"fee-percentages-priority-and-hiding",children:"Fee Percentages, Priority and Hiding"}),"\n",(0,i.jsxs)(n.p,{children:["Within permission-names, or within the ",(0,i.jsx)(n.code,{children:"default"})," fallback, fee-percentages may be specified for buying (",(0,i.jsx)(n.code,{children:"buy"}),") and selling (",(0,i.jsx)(n.code,{children:"sell"}),") as a floating-point value in the range ",(0,i.jsx)(n.code,{children:"[0;1]"}),". These names represent underlying permissions, which the player may or may not have, from which directly follows that a player could have access to multiple fee-percentages simultaneously, most likely due to the standard concept of group permission inheritance; while you could (and may should) block distance-range permissions from trickling down, an optional value called ",(0,i.jsx)(n.code,{children:"priority"})," has been introduced: the highest priority to which the player has access to will be chosen, whenever multiple candidates exist."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"priority"})," has to be a strictly positive integer. There is no need to ever specify a priority on the ",(0,i.jsx)(n.code,{children:"default"}),"-fallback, as it will never conflict with named ranges. Beware! If no priority has been specified, the first match (from top to bottom) will be selected - this is clearly defined and expected behavior."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(3308).A+"",width:"568",height:"964"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, if a player only has permission to ",(0,i.jsx)(n.code,{children:"nameA"}),", it will be chosen; the same holds true for only having access to ",(0,i.jsx)(n.code,{children:"nameB"}),"; for both ",(0,i.jsx)(n.code,{children:"nameA"})," and ",(0,i.jsx)(n.code,{children:"nameB"}),", ",(0,i.jsx)(n.code,{children:"nameB"})," will be chosen, in contrast to the case of ",(0,i.jsx)(n.code,{children:"nameA"})," winning out if there were no priority-values, simply due to it being defined first."]}),"\n",(0,i.jsxs)(n.p,{children:["In order to hide shops falling into a certain range of distances, within a certain world, within a certain named permission (or default), simply set ",(0,i.jsx)(n.code,{children:"hidden"})," to ",(0,i.jsx)(n.code,{children:"true"}),"; these shops will not be rendered in the shop-browser."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"fees enabled",src:s(6068).A+"",width:"522",height:"638"})}),"\n",(0,i.jsx)(n.h3,{id:"full-example",children:"Full Example"}),"\n",(0,i.jsx)(n.p,{children:"Below you can find a textual full use example, with explanatory comments, containing all possible keys and cases."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"fees:\n  # Enable distance-based fees\n  enabled: true\n  distanceRanges:\n    # Fallback for when no world-name matches on 'worlds'\n    default:\n      10: # Distance in [0;10]\n        # Fallback for when the player has no access to any named range\n        default:\n          buy: 0\n          sell: 0\n        # Named ranges, each corresponding to a separate permission\n        names:\n          # quickshopsearch.fees.distance-range.nameA\n          nameA:\n            priority: 1\n            buy: 0\n            sell: 0\n          # quickshopsearch.fees.distance-range.nameB\n          nameB:\n            # If access to both nameA and nameB, nameB will win\n            priority: 2\n            buy: 0\n            sell: 0\n          # quickshopsearch.fees.distance-range.nameC\n      20: # Distance in [11;20]\n        default:\n          # Hide all shops with a distance greater than 20 for players\n          # who do not have access to any named ranges\n          hidden: true\n        # Structure equivalent to 10\n    # Distance-ranges per world-name (ignores casing)\n    worlds:\n      # World named 'skyblock'\n      skyblock:\n        # Structure equivalent to distanceRanges.default\n      # World named 'oneblock'\n      oneblock:\n        # Structure equivalent to distanceRanges.default\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},6101:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_enabled-faa29f2e666f97c06963aff1695a9618.png"},6068:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_hidden-2341204a768b919595805fb98ca1f50b.png"},6876:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_intervals-f41f12866ab1c6bf7c5a816ef217c4ef.png"},9543:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_per_permission_name-ee0ec7323c786488a3498681f3eed24b.png"},2746:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_per_world-37315cd62856c976877c686216ed47e8.png"},3308:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/configuration_fees_percentages_and_priority-4c6cc7846d03dd3ac1f5add9b7048690.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);